{"version":3,"file":"static/js/160.8433adfe.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/FilterBlock.module.css?e71c","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.js","components/pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectNameFilter = state => state.filters.name;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookWrapp\":\"Phonebook_phonebookWrapp__JR92B\",\"phonebookForm\":\"Phonebook_phonebookForm__CaULo\",\"label\":\"Phonebook_label__Qzztg\",\"input\":\"Phonebook_input__8yiEQ\",\"buttonInput\":\"Phonebook_buttonInput__JXZaU\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { PhoneIcon } from '@chakra-ui/icons';\nimport { Icon } from '@chakra-ui/react';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { InputGroup, InputLeftElement, Input } from '@chakra-ui/react';\nimport { toast } from 'react-toastify';\nimport css from './Phonebook.module.css';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const phone = form.elements.number.value;\n    const existingArray = contacts.filter(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (existingArray.length === 0) {\n      dispatch(addContact({ name, phone }));\n    } else {\n      toast.warn(`${name} is already in contacts.`);\n    }\n\n    form.reset();\n  };\n\n  return (\n    <div className={css.phonebookWrapp}>\n      <form className={css.phonebookForm} onSubmit={handleSubmit}>\n        <label className={css.label}>\n          Name:\n          <InputGroup mb={5} mt={2} borderColor=\"gray.500\">\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={\n                <Icon as={BsFillPersonFill} color=\"gray.500\" size=\"sm\" />\n              }\n            />\n            <Input\n              type=\"tel\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              w={350}\n              borderColor=\"gray.500\"\n              bg={'white'}\n            />\n          </InputGroup>\n        </label>\n\n        <label className={css.label}>\n          Number:\n          <InputGroup mb={7} mt={2} borderColor=\"gray.500\">\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<PhoneIcon color=\"gray.500\" size=\"sm\" />}\n            />\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              borderColor=\"gray.500\"\n              bg={'white'}\n            />\n          </InputGroup>\n        </label>\n        <div>\n          <input\n            className={css.buttonInput}\n            type=\"submit\"\n            value=\"Add contact\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"findContactWrapp\":\"FilterBlock_findContactWrapp__wsh1H\",\"label\":\"FilterBlock_label__oX+HZ\"};","import React from 'react';\nimport { setNameFilter } from '../../redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectNameFilter } from 'redux/contacts/selectors';\nimport { InputGroup, InputLeftElement, Input } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport css from './FilterBlock.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filteredName = useSelector(selectNameFilter);\n\n  return (\n    <div className={css.findContactWrapp}>\n      <label className={css.label}>\n        Find contacts by name\n        <InputGroup mb={5} mt={2} borderColor=\"gray.500\" width={350}>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<SearchIcon color=\"gray.500\" size=\"sm\" />}\n          />\n          <Input\n            className={css.input}\n            type=\"text\"\n            name=\"filter\"\n            value={filteredName}\n            onChange={event =>\n              dispatch(setNameFilter(event.currentTarget.value))\n            }\n            borderColor=\"gray.500\"\n            bg={'white'}\n          />\n        </InputGroup>\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsBlock\":\"Contacts_contactsBlock__ODN-X\",\"listOfContacts\":\"Contacts_listOfContacts__QIYfA\",\"contactItem\":\"Contacts_contactItem__qm4r1\",\"button\":\"Contacts_button__vUlqW\"};","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectContacts,\n  selectNameFilter,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { Box } from '@chakra-ui/react';\nimport css from './Contacts.module.css';\n\nexport const getVisibleContacts = (contacts, filteredName) => {\n  if (!filteredName) {\n    return contacts;\n  }\n  const normalizedFilter = filteredName?.toLowerCase();\n  const filteredContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return filteredContacts;\n};\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts) ?? [];\n  const filteredName = useSelector(selectNameFilter);\n  const visibleContacts = getVisibleContacts(contacts, filteredName);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = item => dispatch(deleteContact(item.id));\n\n  return (\n    <div className={css.contactsBlock}>\n      <Box h=\"7\">{isLoading && !error && <b>Request in progress...</b>}</Box>\n\n      <ul className={css.listOfContacts}>\n        {contacts.length > 0 &&\n          visibleContacts.map(item => (\n            <li className={css.contactItem} key={item.id}>\n              {item.name}: {item.number}\n              <button\n                className={css.button}\n                type=\"button\"\n                onClick={() => handleDelete(item)}\n              >\n                Delete <DeleteIcon />\n              </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Phonebook />\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectNameFilter","filters","name","Phonebook","dispatch","useDispatch","useSelector","className","css","onSubmit","event","preventDefault","form","currentTarget","elements","value","phone","number","filter","contact","toLowerCase","length","addContact","toast","reset","mb","mt","borderColor","pointerEvents","children","as","BsFillPersonFill","color","size","type","pattern","title","required","w","bg","Filter","filteredName","width","onChange","setNameFilter","Contacts","visibleContacts","normalizedFilter","includes","getVisibleContacts","useEffect","fetchContacts","h","map","item","onClick","deleteContact","id","handleDelete","ContactsList"],"sourceRoot":""}